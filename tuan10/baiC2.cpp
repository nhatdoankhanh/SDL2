#include <iostream>
#include <cstring>
#include <cctype>

using namespace std;

// Khai báo một mảng 2D để lưu trữ các ký tự dưới dạng "chữ to"
const char* letters[26][6][6] = {
    // A
    {
        "  ### ",
        " #   #",
        "#     ",
        "#     ",
        " #   #",
        "  ### "
    },
    // B
    {
        "####  ",
        "#   # ",
        "#   # ",
        "####  ",
        "#   # ",
        "####  "
    },
    // C
    {
        " ### ",
        "#   #",
        "#    ",
        "#    ",
        "#   #",
        " ### "
    },
    // D
    {
        "####  ",
        "#   # ",
        "#    #",
        "#    #",
        "#   # ",
        "####  "
    },
    // E
    {
        "#####",
        "#    ",
        "#    ",
        "#####",
        "#    ",
        "#####"
    },
    // F
    {
        "#####",
        "#    ",
        "#    ",
        "#####",
        "#    ",
        "#    "
    },
    // G
    {
        " #### ",
        "#    #",
        "#     ",
        "#  ###",
        "#    #",
        " #### "
    },
    // H
    {
        "#   #",
        "#   #",
        "#####",
        "#   #",
        "#   #",
        "#   #"
    },
    // I
    {
        "######",
        "  ##  ",
        "  ##  ",
        "  ##  ",
        "  ##  ",
        "######"
    },
    // J
    {
        " #####",
        "    ##",
        "    ##",
        "    ##",
        "    ##",
        "#   ##"
    },
    // K
    {
        "#   #",
        "#  # ",
        "###  ",
        "#  # ",
        "#   #",
        "#   #"
    },
    // L
    {
        "#    ",
        "#    ",
        "#    ",
        "#    ",
        "#    ",
        "#####"
    },
    // M
    {
        "#    #",
        "##  ##",
        "# ## #",
        "#    #",
        "#    #",
        "#    #"
    },
    // N
    {
        "#    #",
        "##   #",
        "# #  #",
        "#  # #",
        "#   ##",
        "#    #"
    },
    // O
    {
        " ### ",
        "#   #",
        "#   #",
        "#   #",
        "#   #",
        " ### "
    },
    // P
    {
        "#### ",
        "#   #",
        "#   #",
        "#### ",
        "#    ",
        "#    "
    },
    // Q
    {
        " #### ",
        "#   # ",
        "#   # ",
        "# # # ",
        "#  ## ",
        " #####"
    },
    // R
    {
        "#### ",
        "#   #",
        "#   #",
        "#### ",
        "#  # ",
        "#   #"
    },
    // S
    {
        " #### ",
        "#    #",
        "#     ",
        " ### ",
        "    #",
        "#    #",
        " #### "
    },
    // T
    {
        "######",
        "  ##  ",
        "  ##  ",
        "  ##  ",
        "  ##  ",
        "  ##  "
    },
    // U
    {
        "#   #",
        "#   #",
        "#   #",
        "#   #",
        "#   #",
        " ### "
    },
    // V
    {
        "#   #",
        "#   #",
        "#   #",
        "#   #",
        " # # ",
        "  #  "
    },
    // W
    {
        "#     #",
        "#     #",
        "#     #",
        "#  #  #",
        "# # # #",
        "##   ##"
    },
    // X
    {
        "#   #",
        " # # ",
        "  #  ",
        "  #  ",
        " # # ",
        "#   #"
    },
    // Y
    {
        "#   #",
        " # # ",
        "  #  ",
        "  #  ",
        "  #  ",
        "  #  "
    },
    // Z
    {
        "######",
        "    # ",
        "   #  ",
        "  #   ",
        " #    ",
        "######"
    }
};

void drawLetter(char c) {
    if (!isalpha(c)) return; // Nếu không phải là chữ cái, không làm gì cả

    int index = toupper(c) - 'A'; // Chuyển về chữ hoa và tính index trong mảng letters
    for (int i = 0; i < 6; ++i) {
        cout << letters[index][i] << endl; // In từng dòng của chữ cái
    }
}

int main() {
    char word[13]; // Tối đa 12 ký tự, cộng thêm 1 để tránh buffer overflow
    cout << "Nhập từ tiếng Anh (độ dài không quá 12 ký tự): ";
    cin >> word;

    int length = strlen(word);

    // Vẽ từng chữ cái và in ra màn hình
    for (int i = 0; i < length; ++i) {
        drawLetter(word[i]);
    }

    return 0;
}

